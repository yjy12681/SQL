--집합연산자
-- UNION(합집합), UNION ALL(합집합), INTERSECT(교집합), MINUS(차집합)
SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE HIRE_DATE LIKE '04%'
UNION
SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE DEPARTMENT_ID = 20;  --미쉘이 중복이기 때문에 , 중복제거

SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE HIRE_DATE LIKE '04%'
UNION ALL
SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE DEPARTMENT_ID = 20; --중복까지 모두 다 출력

SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE HIRE_DATE LIKE '04%'
INTERSECT
SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE DEPARTMENT_ID = 20; -- 중복되는 값만 출력

SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE HIRE_DATE LIKE '04%'
MINUS
SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE DEPARTMENT_ID = 20; -- 중복된 값을 뺀 위에 SELECT절 출력

--집합연산자는 컬럼수가 일치해야 합니다
--컬럼수만 일치한다면, 다양한 형태로 사용이 됩니다.
SELECT FIRST_NAME, HIRE_DATE,LAST_NAME FROM EMPLOYEES WHERE HIRE_DATE LIKE '04%'
UNION
SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE DEPARTMENT_ID = 20;

SELECT '홍길동', TO_CHAR(SYSDATE) FROM DUAL
UNION ALL
SELECT '이순신', '05/01/01' FROM DUAL
UNION ALL
SELECT '홍길자', '06/02/02' FROM DUAL
UNION ALL
SELECT LAST_NAME, TO_CHAR(HIRE_DATE) FROM EMPLOYEES;

-------------------------------------------------------------------------------
--분석함수 - 행에 대한 결과를 출력하는 기능, OVER()와 함께 사용합니다.
SELECT FIRST_NAME,SALARY,
        RANK()  OVER(ORDER BY SALARY DESC), -- 중복순서 O 
        DENSE_RANK() OVER(ORDER BY SALARY DESC), -- 중복순서 X
        ROW_NUMBER() OVER(ORDER BY SALARY DESC), -- 데이터의번호, 
        COUNT(*) OVER(), --전체 데이터 개수
        ROWNUM --조회가 일어난 순서
        FROM EMPLOYEES ;